<?php

/**
 * @file
 */

/**
 * @author Martin Scholz
 */
function wisski_textanly_install() {

  drupal_install_schema('wisski_textanly');

  // Load person name info file into tables.
  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), drupal_get_path('module', 'wisski_textanly') . '/default_personnames.csv');
  _wisski_textanly_bulk_load(db_prefix_tables('{wisski_textanly_person}'), drupal_get_path('module', 'wisski_textanly') . '/default_persontypes.csv');

  // Set up a default vocab detection step.
  $default_vocab = [
    'wisski_textanly_analyser',
    'Default vocabulary detection',
    'default',
    '',
    0,
    'wisski_textanly_vocab',
    'wisski_textanly',
    serialize([
      "place_coords" => [],
      "rank_offset_coords_lat" => "0",
      "rank_offset_coords_long" => "0",
      "place_use_approved_coordinates" => 0,
      "place_classes" => [],
      "rank_offset_exact" => "2",
      "rank_offset_contains" => "1",
      "rank_offset_guess" => "-1",
      "rank_factor_length_contains" => "6",
      "rank_factor_length_guess" => "-2",
      "rank_offset_has_lemma" => [],
      "rank_offset_has_pos" => [],
    ]),
  ];
  db_query("INSERT INTO {%s} (name, profile, lang, weight, type, module, settings) VALUES ('%s', '%s', '%s', '%s', '%s', '%s', '%s')", $default_vocab);

}

/**
 * Load a csv file into a db table
 * This function can be used if LOAD DATA INFILE is not possible.
 *
 * @author Martin Scholz
 */
function _wisski_textanly_bulk_load($table, $file) {

  if (substr($file, 7) != 'http://' && !is_readable($file)) {
    return FALSE;
  }

  $fh = fopen($file, 'r');
  while (!feof($fh)) {
    $lines = [];
    $values = [$table];
    for ($count = 0; $count < 1000 && !feof($fh); $count++) {
      $line = fgets($fh);
      if (preg_match('/^\s*$|^ +#/', $line)) {
        // Empty line or comment.
        continue;
      }
      $line = str_replace("\n", '', $line);
      $line = str_replace("\r", '', $line);
      $v = explode("\t", $line);
      $values = array_merge($values, $v);
      $lines[] = '(' . join(',', array_fill(0, count($v), "'%s'")) . ')';
    }
    if (empty($lines)) {
      break;
    }
    $lines = join(',', $lines);
    db_query("INSERT INTO %s VALUES $lines", $values);
  }

  return TRUE;

}

/**
 * @author Martin Scholz
 */
function wisski_textanly_uninstall() {
  drupal_uninstall_schema('wisski_textanly');
}

/**
 * @author Martin Scholz
 */
function wisski_textanly_schema() {

  $schema['wisski_textanly_analyser'] = [
    'fields' => [
      'aid' => [
        'type' => 'serial',
        'size' => 'normal',
        'not null' => TRUE,
      ],
      'name' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'type' => [
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
      ],
      'module' => [
        'type' => 'varchar',
        'length' => 100,
        'not null' => TRUE,
      ],
      'profile' => [
        'type' => 'varchar',
        'length' => 50,
        'not null' => TRUE,
      ],
      'weight' => [
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ],
      'lang' => [
        'type' => 'varchar',
        'length' => 11,
        'default' => '',
      ],
      'settings' => [
        'type' => 'text',
        'size' => 'normal',
        'not null' => TRUE,
        'serialize' => TRUE,
      ],
    ],
    'primary key' => ['aid'],
    'unique keys' => [
      'name' => ['name'],
    ],
    'indexes' => [
      'module' => ['module'],
      'type' => ['type'],
      'weight' => ['weight'],
      'profile' => ['profile'],
      'lang' => ['lang'],
    ],
  ];

  $schema['wisski_textanly_person'] = [
    'fields' => [
      'name' => [
        'type' => 'varchar',
        'length' => 150,
        'not null' => TRUE,
      ],
      'type' => [
        'type' => 'varchar',
        'length' => 10,
        'not null' => TRUE,
      ],
      'offset' => [
        'type' => 'int',
        'size' => 'normal',
        'not null' => TRUE,
      ],
      'rank' => [
        'type' => 'float',
        'size' => 'normal',
        'not null' => TRUE,
      ],
      'lang' => [
        'type' => 'varchar',
        'length' => 11,
        'default' => '',
      ],
      'args' => [
        'type' => 'text',
        'size' => 'normal',
      ],
    ],
    'indexes' => [
      'name' => [['name', 20]],
      'type' => ['type'],
      'lang' => ['lang'],
      'rank' => ['rank'],
    ],
  ];

  return $schema;
}
